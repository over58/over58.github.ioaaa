<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yongchao&#39;s blog</title>
  
  <subtitle>A fast, simple &amp; powerful blog framework powered by Node.js.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yongchao.tech:8080/"/>
  <updated>2019-03-04T11:53:11.687Z</updated>
  <id>http://yongchao.tech:8080/</id>
  
  <author>
    <name>yongchao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue-directive</title>
    <link href="http://yongchao.tech:8080/2019/03/05/vue-directive/"/>
    <id>http://yongchao.tech:8080/2019/03/05/vue-directive/</id>
    <published>2019-03-04T19:34:37.000Z</published>
    <updated>2019-03-04T11:53:11.687Z</updated>
    
    <content type="html"><![CDATA[<h3 id="vue-directive-的几个钩子函数"><a href="#vue-directive-的几个钩子函数" class="headerlink" title="vue-directive 的几个钩子函数"></a>vue-directive 的几个钩子函数</h3><ul><li>bind  指令第一次被绑定到元素时调用，只调用一次</li><li>inserted 被绑定元素插入到父节点时调用</li><li>update 被绑定元素所在模版更新时调用，不论绑定值是否变化都调用</li><li>componentUpdated 被绑定元素所在模版在完成一次更新周期时调用</li><li>unbind 元素解绑时调用，只调用一次</li></ul><a id="more"></a><h3 id="每个钩子函数都有参数："><a href="#每个钩子函数都有参数：" class="headerlink" title="每个钩子函数都有参数："></a>每个钩子函数都有参数：</h3><ul><li>el: 指令绑定的element,用来操作dom</li><li>binging 一个对象，包含以下属性<ul><li>name: 指令名，不包含v-前缀</li><li>value: 指令的绑定值，例如 v-my-directive=叮+ l”， value的值是，2</li><li>oldValue: 指令绑定的前一个值，仅在 update 和 componentUpdated 钩子中可用.无论value 值是否改变都可用。</li><li>expression: 绑定值的字符串形式。例如v-my-directive=”1+ 1”，expression的值是”1+I”.</li><li>arg： 指令的arguments, 例如 v-my-directive:foo, arg 的值是 foo</li><li>modifiers: 一个包含修饰符的对象 。 例如 v-my-directive.foo.bar，修饰符对象 modifiers的值是{ foo: true, bar: true }</li></ul></li><li>vnode</li><li>oldVnode: 上一个虚拟节点仅在 update 和 componentUpdated 钩子中可用 。 </li></ul><h4 id="clickoutsize指令的实现"><a href="#clickoutsize指令的实现" class="headerlink" title="clickoutsize指令的实现"></a>clickoutsize指令的实现</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Vue.directive(&apos;clickoutside&apos;, &#123;</span><br><span class="line">  bind: function (el, binding) &#123;</span><br><span class="line">    function documentHandler (e) &#123;</span><br><span class="line">      if (binding.arg === &apos;esc&apos; &amp;&amp; e.keyCode === 27) &#123;</span><br><span class="line">        &lt;!-- v-clickoutside的value 是一个函数，这里相当于执行绑定的函数 --&gt;</span><br><span class="line">        binding.value(e)</span><br><span class="line">      &#125;</span><br><span class="line">      &lt;!-- 如果点击的元素是在绑定了v-clickoutside指令元素的内容，则忽略 --&gt;</span><br><span class="line">      if (el.contains(e.target)) &#123;</span><br><span class="line">        return false</span><br><span class="line">      &#125;</span><br><span class="line">      if (binding.expression) &#123;</span><br><span class="line">        binding.value(e)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &lt;!-- 在元素添加一个元素用来存绑定的函数，是为了unbind的时候能够找到这个函数 --&gt;</span><br><span class="line">    el.__vueClickOutside__ = documentHandler</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 在全局添加一些事件 --&gt;</span><br><span class="line">    window.addEventListener(&apos;keydown&apos;, documentHandler)</span><br><span class="line">    document.addEventListener(&apos;click&apos;, documentHandler)</span><br><span class="line">    document.addEventListener(&apos;keydown&apos;, documentHandler)</span><br><span class="line">  &#125;,</span><br><span class="line">  unbind: function (el) &#123;</span><br><span class="line">    document.removeEventListener(&apos;click&apos;, el.__vueClickOutside__)</span><br><span class="line">    delete el.__vueClickOutside__</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;vue-directive-的几个钩子函数&quot;&gt;&lt;a href=&quot;#vue-directive-的几个钩子函数&quot; class=&quot;headerlink&quot; title=&quot;vue-directive 的几个钩子函数&quot;&gt;&lt;/a&gt;vue-directive 的几个钩子函数&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;bind  指令第一次被绑定到元素时调用，只调用一次&lt;/li&gt;
&lt;li&gt;inserted 被绑定元素插入到父节点时调用&lt;/li&gt;
&lt;li&gt;update 被绑定元素所在模版更新时调用，不论绑定值是否变化都调用&lt;/li&gt;
&lt;li&gt;componentUpdated 被绑定元素所在模版在完成一次更新周期时调用&lt;/li&gt;
&lt;li&gt;unbind 元素解绑时调用，只调用一次&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yongchao.tech:8080/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>对于echarts图表随着浏览器窗口resize的优化</title>
    <link href="http://yongchao.tech:8080/2019/03/05/%E5%AF%B9%E4%BA%8Eecharts%E5%9B%BE%E8%A1%A8%E9%9A%8F%E7%9D%80%E6%B5%8F%E8%A7%88%E5%99%A8%E7%AA%97%E5%8F%A3resize%E7%9A%84%E4%BC%98%E5%8C%96/"/>
    <id>http://yongchao.tech:8080/2019/03/05/对于echarts图表随着浏览器窗口resize的优化/</id>
    <published>2019-03-04T19:07:32.000Z</published>
    <updated>2019-03-04T11:15:26.333Z</updated>
    
    <content type="html"><![CDATA[<p>说明： 有时候项目中会显示一些图表，而且width可能并不是固定的（可能100%），那么当浏览器窗口变化的时候，图表的大小应该跟随着变大或变小，称之为resize</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 用来处理每一个有图表的页面添加resize , 离开时移除resize函数</span><br><span class="line"> */</span><br><span class="line">import echarts from &apos;echarts&apos;</span><br><span class="line">import _ from &apos;lodash&apos;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      doms: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    chartResize () &#123;</span><br><span class="line">      return _.throttle(() =&gt; &#123;</span><br><span class="line">        return this.doms.forEach(dom =&gt; &#123;</span><br><span class="line">          dom &amp;&amp; dom.resize()</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;, 400)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    initChart () &#123;</span><br><span class="line">      this.doms.forEach(dom =&gt; &#123;</span><br><span class="line">        dom &amp;&amp; echarts.init(dom)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted () &#123;</span><br><span class="line">    console.log(&apos;mixins mounted&apos;)</span><br><span class="line">    this.doms = [this.$refs[&apos;charts&apos;]]</span><br><span class="line">    this.initChart()</span><br><span class="line">    window.addEventListener(&apos;resize&apos;, this.chartResize)</span><br><span class="line">  &#125;,</span><br><span class="line">  destroyed () &#123;</span><br><span class="line">    console.log(&apos;mixins destroyed&apos;)</span><br><span class="line">    window.removeEventListener(&apos;resize&apos;, this.chartResize)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ps: 使用的时候在需要图表的页面引入这个mixins</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;说明： 有时候项目中会显示一些图表，而且width可能并不是固定的（可能100%），那么当浏览器窗口变化的时候，图表的大小应该跟随着变大或变小，称之为resize&lt;/p&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yongchao.tech:8080/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>覆盖ui框架css原生样式</title>
    <link href="http://yongchao.tech:8080/2019/03/05/%E8%A6%86%E7%9B%96ui%E6%A1%86%E6%9E%B6css%E5%8E%9F%E7%94%9F%E6%A0%B7%E5%BC%8F/"/>
    <id>http://yongchao.tech:8080/2019/03/05/覆盖ui框架css原生样式/</id>
    <published>2019-03-04T19:03:48.000Z</published>
    <updated>2019-03-04T11:11:07.084Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>加scoped</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped&gt;</span><br><span class="line">/deep/.rootName .className&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">or </span><br><span class="line"></span><br><span class="line">.rootName &gt;&gt;&gt; .className&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li><li><p>不加scoped<br>原理：在组件中添加了父css类, 在修改的样式作用域限定为父css类，减小css的影响范围</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">.rootName .className&#123;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;加scoped&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;
      
    
    </summary>
    
    
      <category term="vue" scheme="http://yongchao.tech:8080/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue-intro使用方法及注意点</title>
    <link href="http://yongchao.tech:8080/2019/03/05/vue-intro%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E5%8F%8A%E6%B3%A8%E6%84%8F%E7%82%B9/"/>
    <id>http://yongchao.tech:8080/2019/03/05/vue-intro使用方法及注意点/</id>
    <published>2019-03-04T19:01:39.000Z</published>
    <updated>2019-03-04T11:11:07.084Z</updated>
    
    <content type="html"><![CDATA[<p>1、使用时必须引入intro.js<br>2、let intro=Intro.intro()<br>3、intro.setOptions({}).start().oncomplete().onskip(function)<br>4、intro这个插件只能提示一些静态的页面上已经有的一些元素，异步的或者是后来动态显示的元素无法加上提示.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、使用时必须引入intro.js&lt;br&gt;2、let intro=Intro.intro()&lt;br&gt;3、intro.setOptions({}).start().oncomplete().onskip(function)&lt;br&gt;4、intro这个插件只能提示一些静态的页面上
      
    
    </summary>
    
    
      <category term="vue" scheme="http://yongchao.tech:8080/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue中定时器问题</title>
    <link href="http://yongchao.tech:8080/2019/03/05/vue%E4%B8%AD%E5%AE%9A%E6%97%B6%E5%99%A8%E9%97%AE%E9%A2%98/"/>
    <id>http://yongchao.tech:8080/2019/03/05/vue中定时器问题/</id>
    <published>2019-03-04T18:58:04.000Z</published>
    <updated>2019-03-04T11:11:07.084Z</updated>
    
    <content type="html"><![CDATA[<p>Vue中使用了定时器后在关闭页面后必须手动清理</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">方案一</span><br><span class="line"></span><br><span class="line">data: &#123;</span><br><span class="line">  tiemr: null  </span><br><span class="line">&#125;,</span><br><span class="line">method: &#123;</span><br><span class="line">  method1 () &#123;</span><br><span class="line">    this.timer = setInterval(()=&gt; &#123;</span><br><span class="line">      // logic </span><br><span class="line">    &#125;, interval)</span><br><span class="line">  &#125;  </span><br><span class="line">&#125;,</span><br><span class="line">beforeDestroy() &#123;</span><br><span class="line">    clearInterval(this.timer)</span><br><span class="line">    this.timer = null</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">方案二：</span><br><span class="line"></span><br><span class="line">通过$once来监听定时器，在beforeDestroy中可以被清除</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">优点：这两段代码写在一起，不同特意定义一个data.timer</span><br><span class="line">缺点：适用于只有离开页面关闭定时器的情况，</span><br><span class="line">const timer = setInterval(()=&gt;&#123;</span><br><span class="line">    // logic</span><br><span class="line">&#125;, interval)</span><br><span class="line"></span><br><span class="line">this.$once(&apos;hook:beforeDestroy&apos;, ()=&gt;&#123;</span><br><span class="line">    clearInterval(timer)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">ps: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">template&gt;</span><br><span class="line">  &lt;div class=&quot;test&quot;&gt;</span><br><span class="line">    &lt;Button @click=&quot;addInterval()&quot;&gt;add&lt;/Button&gt;</span><br><span class="line">    &lt;h1&gt;测试&lt;/h1&gt;</span><br><span class="line">    &lt;router-view/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    addInterval () &#123;</span><br><span class="line">      const timer = setInterval(() =&gt; &#123;</span><br><span class="line">        console.log(&apos;aaa&apos;)</span><br><span class="line">      &#125;, 100)</span><br><span class="line">      this.$once(&apos;hook:beforeDestroy&apos;, () =&gt; &#123;</span><br><span class="line">        clearInterval(timer)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Vue中使用了定时器后在关闭页面后必须手动清理&lt;/p&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yongchao.tech:8080/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>js的灵活</title>
    <link href="http://yongchao.tech:8080/2019/03/04/js%E7%9A%84%E7%81%B5%E6%B4%BB/"/>
    <id>http://yongchao.tech:8080/2019/03/04/js的灵活/</id>
    <published>2019-03-04T14:53:55.000Z</published>
    <updated>2019-03-04T14:55:35.692Z</updated>
    
    <content type="html"><![CDATA[<h3 id="js是超级灵活的语言"><a href="#js是超级灵活的语言" class="headerlink" title="js是超级灵活的语言"></a>js是超级灵活的语言</h3><h4 id="step1"><a href="#step1" class="headerlink" title="step1"></a>step1</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var checkObj = function () &#123;&#125;</span><br><span class="line">    checkObj.prototype.checkName = function()&#123;</span><br><span class="line">    console.log(&apos;checkName&apos;)</span><br><span class="line">&#125;</span><br><span class="line">checkObj.prototype.checkEmail = function()&#123;</span><br><span class="line">    console.log(&apos;checkEmail&apos;)</span><br><span class="line">&#125;</span><br><span class="line">checkObj.prototype.checkPassword = function()&#123;</span><br><span class="line">    console.log(&apos;checkPassword&apos;)</span><br><span class="line">&#125;</span><br><span class="line">var a = new checkObj()</span><br><span class="line">a.checkName()</span><br><span class="line">a.checkEmail()</span><br><span class="line">a.checkPassword()</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="step2"><a href="#step2" class="headerlink" title="step2"></a>step2</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">var checkObj = function () &#123;&#125;</span><br><span class="line">checkObj.prototype = &#123;</span><br><span class="line">    checkName:function()&#123;</span><br><span class="line">        console.log(&apos;checkName&apos;)</span><br><span class="line">    &#125;,</span><br><span class="line">    checkEmail: function()&#123;</span><br><span class="line">        console.log(&apos;checkEmail&apos;)</span><br><span class="line">    &#125;,</span><br><span class="line">    checkPassword: function()&#123;</span><br><span class="line">        console.log(&apos;checkPassword&apos;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">var a = new checkObj()</span><br><span class="line">a.checkName()</span><br><span class="line">a.checkEmail()</span><br><span class="line">a.checkPassword()</span><br></pre></td></tr></table></figure><h3 id="step3-链式调用"><a href="#step3-链式调用" class="headerlink" title="step3 链式调用"></a>step3 链式调用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">var checkObj = function () &#123;&#125;</span><br><span class="line">    checkObj.prototype = &#123;</span><br><span class="line">        checkName:function()&#123;</span><br><span class="line">        console.log(&apos;checkName&apos;)</span><br><span class="line">        return this</span><br><span class="line">    &#125;,</span><br><span class="line">    checkEmail: function()&#123;</span><br><span class="line">        console.log(&apos;checkEmail&apos;)</span><br><span class="line">        return this</span><br><span class="line">    &#125;,</span><br><span class="line">    checkPassword: function()&#123;</span><br><span class="line">        console.log(&apos;checkPassword&apos;)</span><br><span class="line">        return this</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">var a = new checkObj()</span><br><span class="line">a.checkName().checkEmail().checkPassword()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;js是超级灵活的语言&quot;&gt;&lt;a href=&quot;#js是超级灵活的语言&quot; class=&quot;headerlink&quot; title=&quot;js是超级灵活的语言&quot;&gt;&lt;/a&gt;js是超级灵活的语言&lt;/h3&gt;&lt;h4 id=&quot;step1&quot;&gt;&lt;a href=&quot;#step1&quot; class=&quot;headerlink&quot; title=&quot;step1&quot;&gt;&lt;/a&gt;step1&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var checkObj = function () &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    checkObj.prototype.checkName = function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;checkName&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;checkObj.prototype.checkEmail = function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;checkEmail&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;checkObj.prototype.checkPassword = function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;checkPassword&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var a = new checkObj()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.checkName()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.checkEmail()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.checkPassword()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>js的封装和继承</title>
    <link href="http://yongchao.tech:8080/2019/03/04/js%E5%8E%9F%E5%9E%8B/"/>
    <id>http://yongchao.tech:8080/2019/03/04/js原型/</id>
    <published>2019-03-04T14:20:07.000Z</published>
    <updated>2019-03-04T16:03:24.209Z</updated>
    
    <content type="html"><![CDATA[<p>###　简单介绍<br>谈到JAVASCRIPT的继承，只有一种结构：对象。每个对象都有一个私有属性<strong>proto</strong> 指向它的原型对象(prototype) . 原型对象也有自己的<strong>proto</strong> ,层层向上直到一个对象的原型对象为NULL.根据定义，NULL是没有原型的，并作为这个原型链的最后一个环节。</p><p>！！！ 实例对象的<strong>proto</strong> 等于该对象构造函数的prototype<br>ps:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var obj = &#123;&#125;</span><br><span class="line">obj.__proto__ === Object.prototype</span><br></pre></td></tr></table></figure></p><a id="more"></a><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">var Book = function (id,name, price) &#123;</span><br><span class="line">    // 私有属性</span><br><span class="line">    var num = 1</span><br><span class="line">    // 私有函数</span><br><span class="line">    function checkId()&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    // 公有属性</span><br><span class="line">    this.id = id</span><br><span class="line">    this.name = name</span><br><span class="line">    this.price = price</span><br><span class="line">    // 公有函数</span><br><span class="line">    this.getName=function()&#123;&#125;</span><br><span class="line">    this.getPrice = function()&#123;&#125;</span><br><span class="line">    this.setName = function (name)&#123;this.name = name&#125;</span><br><span class="line">    this.setPrice = function(price)&#123;this.price = price&#125;</span><br><span class="line">    this.getNum = function()&#123;return num&#125;</span><br><span class="line">&#125;</span><br><span class="line">//类静态公有属性（对象不能访问）</span><br><span class="line">Book.isChinese = true</span><br><span class="line">//类静态公有方法（对象不能访问）</span><br><span class="line">Book.resetTime = function()&#123;&#125;</span><br><span class="line"></span><br><span class="line">var book = new Book(&apos;adf2323&apos;,&apos;js设计模式&apos;, 232)</span><br><span class="line">console.log(book.name, book.price, book.id)</span><br><span class="line">console.log(book.getNum())</span><br></pre></td></tr></table></figure><p>###　New的作用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Function Book(id, name , price) &#123;</span><br><span class="line">    Var this = &#123;&#125;</span><br><span class="line">    This.name = name</span><br><span class="line">    This.id = id</span><br><span class="line">    This.price = price</span><br><span class="line">    Return this</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="类的原型对象的作用"><a href="#类的原型对象的作用" class="headerlink" title="类的原型对象的作用"></a>类的原型对象的作用</h3><pre><code>继承通过将父类的实例赋值给子类的原型对象。类的原型对象的作用就是为类的原型添加共有方法，但是类并不能直接访问这些函数和方法。当我实例化的时候，新创建的对象复制了父类的构造函数内的属性与方法并且将原型__proto__ 指向父类的原型对象，这样就拥有了父类的原型对象上的属性和方法，并且这个新创建的对象可以访问到父类原型对象上到的属性和方法</code></pre><h3 id="常见的继承的几种方式"><a href="#常见的继承的几种方式" class="headerlink" title="常见的继承的几种方式"></a>常见的继承的几种方式</h3><h4 id="类式继承"><a href="#类式继承" class="headerlink" title="类式继承"></a>类式继承</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">//声明父类</span><br><span class="line">function SuperClass()&#123;&#125;</span><br><span class="line">// 为父类添加共有方法</span><br><span class="line">SuperClass.prototype.getSuperValue=function()&#123;&#125;</span><br><span class="line"></span><br><span class="line">//声明子类</span><br><span class="line">function SubClass()&#123;</span><br><span class="line">    this.subValue = false</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//继承</span><br><span class="line">SubClass.prototype = new SuperClass();</span><br><span class="line"></span><br><span class="line">// 为子类添加共有方法</span><br><span class="line">SubClass.prototype.getSubValue = function ()&#123;</span><br><span class="line">    return this.subValue</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">缺点：由于子类通过其原型prototype 对父类进行实例化，继承了父类。所以说父类中的共有属性如果是引用类型，就会被子类中的所有实例共用，存在被修改的可能。</span><br></pre></td></tr></table></figure><h4 id="构造函数式继承"><a href="#构造函数式继承" class="headerlink" title="构造函数式继承"></a>构造函数式继承</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">function SuperClass(id)&#123;</span><br><span class="line">  this.books = [&apos;js&apos;, &apos;html&apos;, &apos;css&apos;]</span><br><span class="line">  this.id = id</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SuperClass.prototype.getSuperValue = function () &#123;</span><br><span class="line">  console.log(&apos;getSuperValue&apos;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function SubClass(id)&#123;</span><br><span class="line">  // 继承父类</span><br><span class="line">  SuperClass.call(this, id)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">缺点：只继承了父类构造函数中的公有属性。如果一个函数后者变量想要被继承么，就必须放在父类构造函数中，这样创建的每个实例都会单独拥有一份而不能共用，这样违背了代码复用的原则。为了综合这两种模式的有点，后来有了组合式继承。</span><br></pre></td></tr></table></figure><h4 id="组合式继承aaa"><a href="#组合式继承aaa" class="headerlink" title="组合式继承aaa"></a>组合式继承aaa</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">function SuperClass(id)&#123;</span><br><span class="line">  // 将公有引用类型放在构造函数中</span><br><span class="line">  this.books = [&apos;js&apos;, &apos;html&apos;, &apos;css&apos;]</span><br><span class="line">  this.id = id</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SuperClass.prototype.getSuperValue = function () &#123;</span><br><span class="line">  console.log(&apos;getSuperValue&apos;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function SubClass(id)&#123;</span><br><span class="line">  // 继承父类中构造函数的属性和方法</span><br><span class="line">  SuperClass.call(this, id)</span><br><span class="line">&#125;</span><br><span class="line">SubClass.prototype = new SuperClass()</span><br><span class="line">SubClass.prototype.getTime = function()&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">缺点： </span><br><span class="line">SuperClass.call(this, id)执行了一次父类构造函数</span><br><span class="line">new SuperClass()又执行了一次父类构造函数</span><br></pre></td></tr></table></figure><h4 id="寄生组合式继承"><a href="#寄生组合式继承" class="headerlink" title="寄生组合式继承"></a>寄生组合式继承</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">function SuperClass(id)&#123;</span><br><span class="line">  // 将公有引用类型放在构造函数中</span><br><span class="line">  this.books = [&apos;js&apos;, &apos;html&apos;, &apos;css&apos;]</span><br><span class="line">  this.id = id</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SuperClass.prototype.getSuperValue = function () &#123;</span><br><span class="line">  console.log(&apos;getSuperValue&apos;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function SubClass(id)&#123;</span><br><span class="line">  // 继承父类中构造函数的属性和方法</span><br><span class="line">  SuperClass.call(this, id)</span><br><span class="line">&#125;</span><br><span class="line">function inherit(subClass, superClass)&#123;</span><br><span class="line">    //定义了一个没有自有属性的对象</span><br><span class="line">    var F = function()&#123;&#125;</span><br><span class="line">    F.prototype = superClass.prototype</span><br><span class="line">    subClass.prototype = new F() // 干净的继承了父类的公有属性</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="补充：inherit函数"><a href="#补充：inherit函数" class="headerlink" title="补充：inherit函数"></a>补充：inherit函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">function inherit(p)&#123;</span><br><span class="line">    if(p === null) throw TypeError</span><br><span class="line">    if(Object.create)&#123;</span><br><span class="line">        return Object.create(p)</span><br><span class="line">    &#125;</span><br><span class="line">    let t = typeof p</span><br><span class="line">    if(t !== &quot;object&quot; || t!== &quot;function&quot;) throw TypeError</span><br><span class="line">    function F()&#123;&#125;</span><br><span class="line">    F.prototype = p</span><br><span class="line">    return new F();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;###　简单介绍&lt;br&gt;谈到JAVASCRIPT的继承，只有一种结构：对象。每个对象都有一个私有属性&lt;strong&gt;proto&lt;/strong&gt; 指向它的原型对象(prototype) . 原型对象也有自己的&lt;strong&gt;proto&lt;/strong&gt; ,层层向上直到一个对象的原型对象为NULL.根据定义，NULL是没有原型的，并作为这个原型链的最后一个环节。&lt;/p&gt;
&lt;p&gt;！！！ 实例对象的&lt;strong&gt;proto&lt;/strong&gt; 等于该对象构造函数的prototype&lt;br&gt;ps:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var obj = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj.__proto__ === Object.prototype&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yongchao.tech:8080/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>nodejs发送邮件</title>
    <link href="http://yongchao.tech:8080/2019/03/04/nodejs%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
    <id>http://yongchao.tech:8080/2019/03/04/nodejs发送邮件/</id>
    <published>2019-03-04T10:44:17.000Z</published>
    <updated>2019-03-04T09:17:42.816Z</updated>
    
    <content type="html"><![CDATA[<p>使用nodemailer包实现发送邮件<br><a id="more"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">var express = require(&apos;express&apos;)</span><br><span class="line">const nodemailer = require(&apos;nodemailer&apos;)</span><br><span class="line">const app = express()</span><br><span class="line">const PORT = process.env.PORT || 3000</span><br><span class="line"></span><br><span class="line">// 配置163邮箱</span><br><span class="line">let transporter = nodemailer.createTransport(&#123;</span><br><span class="line">  service: &apos;smpt.163.com&apos;,</span><br><span class="line">  host: &apos;smtp.163.com&apos;,</span><br><span class="line">  secureConnection: true,</span><br><span class="line">  port:    465,</span><br><span class="line">  auth: &#123;</span><br><span class="line">    user: &apos;XXXX@163.com&apos;,</span><br><span class="line">    pass: &apos;XXXX&apos;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">// 配置gmail邮箱</span><br><span class="line">// let transporter  = nodeMailer.createTransport(&apos;SMTP&apos;,&#123;</span><br><span class="line">//   service: &apos;gmail&apos;,</span><br><span class="line">//   host: &apos;smtp.gmail.com&apos;,</span><br><span class="line">//   secure: true,</span><br><span class="line">//   port:465,</span><br><span class="line">//   auth: &#123;</span><br><span class="line">//       //邮箱</span><br><span class="line">//       user: &apos;XXXXXXX@gmail.com&apos;,</span><br><span class="line">//       //登入密码</span><br><span class="line">//       pass: &apos;XXXXXXX&apos;,</span><br><span class="line">//   &#125;   </span><br><span class="line">// &#125;);</span><br><span class="line"></span><br><span class="line">let defaultOpions = &#123;</span><br><span class="line">  from: &apos;XXX@163.com&apos;,</span><br><span class="line">  to: &apos;XXX@qq.com&apos;,</span><br><span class="line">  subject: &apos;主题&apos;,</span><br><span class="line">  text: &apos;内容&apos;,</span><br><span class="line">  html: &apos;&lt;b&gt;内容&lt;/b&gt;&apos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.get(&apos;/&apos;, (req, res) =&gt; &#123;</span><br><span class="line">  transporter.sendMail(defaultOpions, (err, info) =&gt; &#123;</span><br><span class="line">    if(err) &#123;</span><br><span class="line">      console.error(err)</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">      console.log(err, info)</span><br><span class="line">    &#125;</span><br><span class="line">    res.send()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.listen(PORT, () =&gt; &#123;</span><br><span class="line">  console.log(&apos;start service&apos;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用nodemailer包实现发送邮件&lt;br&gt;
    
    </summary>
    
    
      <category term="nodejs" scheme="http://yongchao.tech:8080/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>git常用知识点</title>
    <link href="http://yongchao.tech:8080/2019/03/04/git%E5%B8%B8%E7%94%A8%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://yongchao.tech:8080/2019/03/04/git常用知识点/</id>
    <published>2019-03-03T21:43:19.000Z</published>
    <updated>2019-03-03T15:12:02.207Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常用的几个命令"><a href="#常用的几个命令" class="headerlink" title="常用的几个命令"></a>常用的几个命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git add</span><br><span class="line">git commit</span><br><span class="line">git status</span><br><span class="line">git diff </span><br><span class="line">git branch</span><br><span class="line">git remote</span><br><span class="line">git pull </span><br><span class="line">git push </span><br><span class="line">git reset</span><br><span class="line">git tag</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="常见的场景"><a href="#常见的场景" class="headerlink" title="常见的场景"></a>常见的场景</h3><h4 id="版本需要回退到旧版本"><a href="#版本需要回退到旧版本" class="headerlink" title="版本需要回退到旧版本"></a>版本需要回退到旧版本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1、git reset</span><br><span class="line"> git reset --hard &quot;目标版本commmit-id&quot;</span><br><span class="line"> git push origin master -f 暴力，不建议</span><br><span class="line"> 适用场景： 如果想恢复到之前某个提交的版本，且那个版本之后提交的版本我们都不要了，就可以用这种方法。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、git revert</span><br><span class="line"> git revert的作用通过反做创建一个新的版本，这个版本的内容与我们要回退到的目标版本一样，但是HEAD指针是指向这个新生成的版本，而不是目标版本。</span><br><span class="line"> git revert -n 版本号</span><br><span class="line"> git commit -m 版本名</span><br><span class="line"> 适用场景： 如果我们想恢复之前的某一版本（该版本不是merge类型），但是又想保留该目标版本后面的版本，记录下这整个版本变动流程，就可以用这种方法。</span><br></pre></td></tr></table></figure><h4 id="拉取远程分支并创建本地分支"><a href="#拉取远程分支并创建本地分支" class="headerlink" title="拉取远程分支并创建本地分支"></a>拉取远程分支并创建本地分支</h4><p>1、git checkout -b newBranch origin/remoteBranch<br>2、git fetch origin remoteBranch:newBranch<br>3、git checkout -b newBranch –trace origin/remoteBranch</p><h4 id="修改上一次commit的信息，未push到远程分支"><a href="#修改上一次commit的信息，未push到远程分支" class="headerlink" title="修改上一次commit的信息，未push到远程分支"></a>修改上一次commit的信息，未push到远程分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &apos;message&apos; --amend</span><br></pre></td></tr></table></figure><h4 id="忽略对某个文件或者文件夹的的修改"><a href="#忽略对某个文件或者文件夹的的修改" class="headerlink" title="忽略对某个文件或者文件夹的的修改"></a>忽略对某个文件或者文件夹的的修改</h4><p>将文件或者文件夹的名字添加到.gitignore文件</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;常用的几个命令&quot;&gt;&lt;a href=&quot;#常用的几个命令&quot; class=&quot;headerlink&quot; title=&quot;常用的几个命令&quot;&gt;&lt;/a&gt;常用的几个命令&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git add&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git status&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git diff &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git branch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git remote&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git pull &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git reset&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git tag&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://yongchao.tech:8080/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>npm常用知识点</title>
    <link href="http://yongchao.tech:8080/2019/03/03/npm%E5%B8%B8%E7%94%A8%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://yongchao.tech:8080/2019/03/03/npm常用知识点/</id>
    <published>2019-03-03T14:26:47.000Z</published>
    <updated>2019-03-03T13:19:53.416Z</updated>
    
    <content type="html"><![CDATA[<h3 id="更新到最新正式版本"><a href="#更新到最新正式版本" class="headerlink" title="更新到最新正式版本"></a>更新到最新正式版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install npm@latest -g</span><br></pre></td></tr></table></figure><h3 id="更新到未来将会释放的版本"><a href="#更新到未来将会释放的版本" class="headerlink" title="更新到未来将会释放的版本"></a>更新到未来将会释放的版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install npm@next -g</span><br></pre></td></tr></table></figure><h3 id="列出某个包的所有历史banbe"><a href="#列出某个包的所有历史banbe" class="headerlink" title="列出某个包的所有历史banbe"></a>列出某个包的所有历史banbe</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm view &lt;package&gt; versions</span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init or npm init --yes(直接使用默认的设置)</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install package  or npm i package</span><br></pre></td></tr></table></figure><h4 id="安装包之-–save"><a href="#安装包之-–save" class="headerlink" title="安装包之 –save"></a>安装包之 –save</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install package --save 安装包并将包的信息写入package.json中的dependencies</span><br></pre></td></tr></table></figure><h4 id="安装包之-–save-dev"><a href="#安装包之-–save-dev" class="headerlink" title="安装包之 –save-dev"></a>安装包之 –save-dev</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install package --save-dev 安装包并将包的信息写入package.json中的devDependencies</span><br></pre></td></tr></table></figure><h3 id="安装包之-指定版本"><a href="#安装包之-指定版本" class="headerlink" title="安装包之 指定版本"></a>安装包之 指定版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install package@version</span><br></pre></td></tr></table></figure><h3 id="全局包"><a href="#全局包" class="headerlink" title="全局包"></a>全局包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">安装：npm install package -g</span><br><span class="line">查看那些全局包过期： npm outdated -g --depth=0</span><br><span class="line">更新某个全局包：npm update package -g</span><br><span class="line">更新所有的全局包： npm update -g</span><br><span class="line">卸载全局包： npm uninstall package -g</span><br></pre></td></tr></table></figure><h3 id="semver-package的版本问题"><a href="#semver-package的版本问题" class="headerlink" title="semver package的版本问题"></a>semver package的版本问题</h3><p>  semver的格式： 主版本号.次版本号.修订号</p><h4 id="range"><a href="#range" class="headerlink" title="range"></a>range</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt; </span><br><span class="line">&lt;= </span><br><span class="line">&gt; </span><br><span class="line">&gt;=</span><br><span class="line">=</span><br></pre></td></tr></table></figure><h4 id="Advanceed-Range-Syntax"><a href="#Advanceed-Range-Syntax" class="headerlink" title="Advanceed Range Syntax"></a>Advanceed Range Syntax</h4><ul><li>1.2.3 - 2.3.4 := &gt;=1.2.3 &lt;=2.3.4</li><li>1.2.3 - 2.3   := &gt;=1.2.3 &lt;2.4.0</li><li>1.2.3 - 2     := &gt;=1.2.3 &lt;3.0.0</li></ul><h4 id="X-Ranges"><a href="#X-Ranges" class="headerlink" title="X-Ranges"></a>X-Ranges</h4><ul><li><ul><li>:= &gt;=0.0.0 (Any version satisfies)</li></ul></li><li>1.x := &gt;=1.0.0 &lt;2.0.0 (Matching major version)</li><li>1.2.x := &gt;=1.2.0 &lt;1.3.0 (Matching major and minor versions)</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;更新到最新正式版本&quot;&gt;&lt;a href=&quot;#更新到最新正式版本&quot; class=&quot;headerlink&quot; title=&quot;更新到最新正式版本&quot;&gt;&lt;/a&gt;更新到最新正式版本&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install npm@latest -g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;更新到未来将会释放的版本&quot;&gt;&lt;a href=&quot;#更新到未来将会释放的版本&quot; class=&quot;headerlink&quot; title=&quot;更新到未来将会释放的版本&quot;&gt;&lt;/a&gt;更新到未来将会释放的版本&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install npm@next -g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;列出某个包的所有历史banbe&quot;&gt;&lt;a href=&quot;#列出某个包的所有历史banbe&quot; class=&quot;headerlink&quot; title=&quot;列出某个包的所有历史banbe&quot;&gt;&lt;/a&gt;列出某个包的所有历史banbe&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm view &amp;lt;package&amp;gt; versions&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;初始化&quot;&gt;&lt;a href=&quot;#初始化&quot; class=&quot;headerlink&quot; title=&quot;初始化&quot;&gt;&lt;/a&gt;初始化&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm init or npm init --yes(直接使用默认的设置)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="npm" scheme="http://yongchao.tech:8080/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>bfc/float</title>
    <link href="http://yongchao.tech:8080/2019/03/03/bfc-float/"/>
    <id>http://yongchao.tech:8080/2019/03/03/bfc-float/</id>
    <published>2019-03-02T17:17:26.000Z</published>
    <updated>2019-03-03T05:41:08.793Z</updated>
    
    <content type="html"><![CDATA[<h3 id="block-format-context-特点是内部子元素绝不会影响外部的元素"><a href="#block-format-context-特点是内部子元素绝不会影响外部的元素" class="headerlink" title="block format context 特点是内部子元素绝不会影响外部的元素"></a>block format context 特点是内部子元素绝不会影响外部的元素</h3><h3 id="如何触发一个盒子的bfc"><a href="#如何触发一个盒子的bfc" class="headerlink" title="如何触发一个盒子的bfc ?"></a>如何触发一个盒子的bfc ?</h3><p>  1、body 根元素<br>  2、浮动元素：float 除 none 以外的值<br>  3、绝对定位元素：position (absolute、fixed)<br>  4、display 为 inline-block、table-cells、flex<br>  5、overflow 除了 visible 以外的值 (hidden、auto、scroll) </p><a id="more"></a><p><strong>浮动元素产生了浮动流</strong></p><p>  所有产生了浮动流的元素，块级元素看不到他们，产生了bfc的元素和文本类属性（inline）的元素以及文本都能看到浮动元素。</p><p>==ps==: 能清除浮动的只有块级元素</p><h3 id="BFC有以下用途-BFC-特性及应用"><a href="#BFC有以下用途-BFC-特性及应用" class="headerlink" title="BFC有以下用途, BFC 特性及应用"></a>BFC有以下用途, BFC 特性及应用</h3><h4 id="1-上线外边距发生折叠"><a href="#1-上线外边距发生折叠" class="headerlink" title="1. 上线外边距发生折叠"></a>1. 上线外边距发生折叠</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    div&#123;</span><br><span class="line">        width: 100px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background: lightblue;</span><br><span class="line">        margin: 100px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><pre><code>从效果上看，因为两个 div 元素都处于同一个 BFC 容器下 (这里指 body 元素) 。所以第一个 div 的下边距和第二个 div 的上边距发生了重叠，所以两个盒子之间距离只有 100px，而不是 200px。首先这不是 CSS 的 bug，我们可以理解为一种规范，如果想要避免外边距的重叠，可以将其放在不同的 BFC 容器中。</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;p&gt;&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;p&gt;&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">.container &#123;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line">p &#123;</span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 100px;</span><br><span class="line">    background: lightblue;</span><br><span class="line">    margin: 100px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">这时候，两个盒子边距就变成了 200px</span><br></pre></td></tr></table></figure><h4 id="2-BFC-可以包含浮动的元素"><a href="#2-BFC-可以包含浮动的元素" class="headerlink" title="2. BFC 可以包含浮动的元素"></a>2. BFC 可以包含浮动的元素</h4><pre><code>我们都知道，浮动的元素会脱离普通文档流</code></pre><div style="border: 1px solid #000;"><br>    <div style="width: 100px;height: 100px;background: #eee;float: left;"></div><br></div><blockquote><p>由于容器内元素浮动，脱离了文档流，所以容器只剩下 2px 的边距高度。如果使触发容器的 BFC，那么容器将会包裹着浮动元素。</p></blockquote><div style="border: 1px solid #000;overflow: hidden"><br>    <div style="width: 100px;height: 100px;background: #eee;float: left;"></div><br></div><h4 id="3-BFC-可以阻止元素被浮动元素覆盖"><a href="#3-BFC-可以阻止元素被浮动元素覆盖" class="headerlink" title="3. BFC 可以阻止元素被浮动元素覆盖"></a>3. BFC 可以阻止元素被浮动元素覆盖</h4><p>先来看一个文字环绕效果：</p><div style="height: 100px;width: 100px;float: left;background: lightblue">我是一个左浮动的元素</div><br><div style="width: 200px; height: 200px;background: #eee">我是一个没有设置浮动,<br>也没有触发 BFC 元素, width: 200px; height:200px; background: #eee;</div><blockquote><p>这时候其实第二个元素有部分被浮动元素所覆盖，(但是文本信息不会被浮动元素所覆盖) 如果想避免元素被覆盖，可触第二个元素的 BFC 特性，在第二个元素中加入 overflow: hidden</p></blockquote><p>这个方法可以用来实现两列自适应布局，效果不错，这时候左边的宽度固定，右边的内容自适应宽度(去掉上面右边内容的宽度)。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;block-format-context-特点是内部子元素绝不会影响外部的元素&quot;&gt;&lt;a href=&quot;#block-format-context-特点是内部子元素绝不会影响外部的元素&quot; class=&quot;headerlink&quot; title=&quot;block format context 特点是内部子元素绝不会影响外部的元素&quot;&gt;&lt;/a&gt;block format context 特点是内部子元素绝不会影响外部的元素&lt;/h3&gt;&lt;h3 id=&quot;如何触发一个盒子的bfc&quot;&gt;&lt;a href=&quot;#如何触发一个盒子的bfc&quot; class=&quot;headerlink&quot; title=&quot;如何触发一个盒子的bfc ?&quot;&gt;&lt;/a&gt;如何触发一个盒子的bfc ?&lt;/h3&gt;&lt;p&gt;  1、body 根元素&lt;br&gt;  2、浮动元素：float 除 none 以外的值&lt;br&gt;  3、绝对定位元素：position (absolute、fixed)&lt;br&gt;  4、display 为 inline-block、table-cells、flex&lt;br&gt;  5、overflow 除了 visible 以外的值 (hidden、auto、scroll) &lt;/p&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://yongchao.tech:8080/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>overflow-x/overflow-y一个为visible,一个为非visible时候的怪异行为</title>
    <link href="http://yongchao.tech:8080/2019/03/03/overflow-x-overflow-y%E4%B8%80%E4%B8%AA%E4%B8%BAvisible-%E4%B8%80%E4%B8%AA%E4%B8%BA%E9%9D%9Evisible%E6%97%B6%E5%80%99%E7%9A%84%E6%80%AA%E5%BC%82%E8%A1%8C%E4%B8%BA/"/>
    <id>http://yongchao.tech:8080/2019/03/03/overflow-x-overflow-y一个为visible-一个为非visible时候的怪异行为/</id>
    <published>2019-03-02T17:12:50.000Z</published>
    <updated>2019-03-03T05:41:08.793Z</updated>
    
    <content type="html"><![CDATA[<p>MDN的官方解释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The computed values of ‘overflow-x’ and ‘overflow-y’ are the same as their specified values, except that some combinations with ‘visible’ are not possible: if one is specified as ‘visible’ and the other is ‘scroll’ or ‘auto’, then ‘visible’ is set to ‘auto’. The computed value of ‘overflow’ is equal to the computed value of ‘overflow-x’ if ‘overflow-y’ is the same; otherwise it is the pair of computed values of ‘overflow-x’ and ‘overflow-y’.</span><br></pre></td></tr></table></figure><p>overflow-x 和overflow-y的计算值和它们指定的值是相同的，除了某些与visible组合的是不可能的。</p><ol><li>如果一个为visible, 另一个被指定为scroll、 auto 、hidden(实际测试所得) ，那么visible 将被设置为auto</li><li>如果overflow的指定值和overflow-x相等的话（如果overflow-y相同的话）</li></ol><p>其余情况，overflow-x 和overflow-y的值和指定的值相同</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;MDN的官方解释：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;cod
      
    
    </summary>
    
    
      <category term="css" scheme="http://yongchao.tech:8080/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>js/jquery判断是否包含类</title>
    <link href="http://yongchao.tech:8080/2019/03/03/js-jquery%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E5%8C%85%E5%90%AB%E7%B1%BB/"/>
    <id>http://yongchao.tech:8080/2019/03/03/js-jquery判断是否包含类/</id>
    <published>2019-03-02T17:09:29.000Z</published>
    <updated>2019-03-03T05:41:08.793Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">新版本jQuery</span><br><span class="line">  hasClass(&quot;className&quot;) </span><br><span class="line">  is(&quot;.className&quot;)</span><br><span class="line"></span><br><span class="line">原生js </span><br><span class="line">      element.classList.contains(className)</span><br><span class="line"></span><br><span class="line">旧版jQuery:</span><br><span class="line">  hasClass(&quot;.className&quot;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
      <category term="jquery" scheme="http://yongchao.tech:8080/tags/jquery/"/>
    
  </entry>
  
  <entry>
    <title>双层边框样式</title>
    <link href="http://yongchao.tech:8080/2019/03/01/%E5%8F%8C%E5%B1%82%E8%BE%B9%E6%A1%86%E6%A0%B7%E5%BC%8F/"/>
    <id>http://yongchao.tech:8080/2019/03/01/双层边框样式/</id>
    <published>2019-02-28T16:00:13.000Z</published>
    <updated>2019-03-04T14:55:35.692Z</updated>
    
    <content type="html"><![CDATA[<p>outline用于创建两个边框的时候<br>好处:  outline的样式是可变的，<br>缺点: 是border如果是圆角，outline仍然是矩形，经测试，outline只对right bottom占据空间，对left top不产生影响</p><p>box-shadow可以用于产生多个边框<br>好处: border是什么样，投影就是什么样，完美贴合<br>缺点: 指定描绘实线阴影，不能改变阴影的样式color  inset</p><p>box-shadow: h-shadow(水平偏移)  v-shadow(垂直偏移) blur(模糊距离) spread(阴影尺寸) color  inset(边框类型) </p><div class="box shadow-box"></div><br><div class="box outline-box"></div>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">    height:50px;</span><br><span class="line">    width: 100px;</span><br><span class="line">    background: #666;</span><br><span class="line">    border: solid 5px yellowgreen;</span><br><span class="line">    border-radius: 10px;</span><br><span class="line">    margin: 30px;</span><br><span class="line">&#125;</span><br><span class="line">.outline-box&#123;</span><br><span class="line">    outline: red 10px solid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.shadow-box&#123;</span><br><span class="line">    box-shadow: 0 0 0 10px red;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;outline用于创建两个边框的时候&lt;br&gt;好处:  outline的样式是可变的，&lt;br&gt;缺点: 是border如果是圆角，outline仍然是矩形，经测试，outline只对right bottom占据空间，对left top不产生影响&lt;/p&gt;
&lt;p&gt;box-shado
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>button样式的实现</title>
    <link href="http://yongchao.tech:8080/2019/02/28/button%E6%A0%B7%E5%BC%8F%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yongchao.tech:8080/2019/02/28/button样式的实现/</id>
    <published>2019-02-28T15:57:49.000Z</published>
    <updated>2019-03-04T14:55:35.692Z</updated>
    
    <content type="html"><![CDATA[<p>使用stylus 编写<br>工具函数:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vendor(prop,value)</span><br><span class="line">  -webkit-&#123;prop&#125; value</span><br><span class="line">  -moz-&#123;prop&#125; value</span><br><span class="line">  &#123;prop&#125; value</span><br><span class="line"></span><br><span class="line">border-radius(n = 5px)</span><br><span class="line">  vendor(border-radius,n)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">.btn</span><br><span class="line">  padding: 0 40px</span><br><span class="line">  border:none</span><br><span class="line">  height:40px</span><br><span class="line">  border-radius(5px)</span><br><span class="line">  background-color: #5df</span><br><span class="line">  cursor pointer</span><br><span class="line">  transition: all .5s ease</span><br><span class="line">  &amp;:hover</span><br><span class="line">    background-color #666</span><br><span class="line">    color #fff</span><br><span class="line">    transition: all .5s ease</span><br><span class="line">  &amp;:focus</span><br><span class="line">    outline: none</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.btn-3d</span><br><span class="line">  position relative</span><br><span class="line">  top 0</span><br><span class="line">  box-shadow: 0 7px 0 rgba(0,0,0,.2), 0 8px 3px #333</span><br><span class="line">  transition: all .15s ease</span><br><span class="line">  &amp;:active</span><br><span class="line">    position relative</span><br><span class="line">    top 5px</span><br><span class="line">    box-shadow: 0 2px 0 rgba(0,0,0,.2), 0 3px 3px #333</span><br><span class="line">    transition: all .3s ease</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.btn-glowing</span><br><span class="line">  animation:  glowing 3s infinite;</span><br><span class="line"></span><br><span class="line">@keyframes glowing </span><br><span class="line">  from</span><br><span class="line">    box-shadow: 0 0 0 rgba(44, 154, 219, 0.3)</span><br><span class="line">  50%</span><br><span class="line">    box-shadow: 0 0 20px rgba(44, 154, 219, 0.8)</span><br><span class="line">  to</span><br><span class="line">    box-shadow: 0 0 0 rgba(44, 154, 219, 0.3)</span><br></pre></td></tr></table></figure><p>按钮菜单<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">.btn-dropdown</span><br><span class="line">  position relative</span><br><span class="line">  overflow visible</span><br><span class="line">  display inline-block</span><br><span class="line">  &amp;:hover,&amp;:active</span><br><span class="line">    .btn-dropdown-list</span><br><span class="line">      display inline-block</span><br><span class="line">.btn-dropdown-list</span><br><span class="line">  display none</span><br><span class="line">  position absolute</span><br><span class="line">  top 100%</span><br><span class="line">  left 0</span><br><span class="line">  margin 0</span><br><span class="line">  padding 0</span><br><span class="line">  z-index 1000</span><br><span class="line">  min-width 100%</span><br><span class="line">  list-style-type: none</span><br><span class="line">  background: rgba(255, 255, 255, 0.95)</span><br><span class="line">  border-style: solid</span><br><span class="line">  border-width: 1px</span><br><span class="line">  border-color: #d4d4d4</span><br><span class="line">  font-family: &quot;Helvetica Neue Light&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Lucida Grande&quot;, sans-serif</span><br><span class="line">  -webkit-box-shadow: 0 2px 7px rgba(0, 0, 0, 0.2)</span><br><span class="line">  box-shadow: 0 2px 7px rgba(0, 0, 0, 0.2)</span><br><span class="line">  border-radius: 3px</span><br><span class="line">  -webkit-box-sizing: border-box</span><br><span class="line">  -moz-box-sizing: border-box</span><br><span class="line">  box-sizing: border-box</span><br><span class="line">  &amp;:hover</span><br><span class="line">    display inline-block</span><br><span class="line"></span><br><span class="line">.btn-dropdown-list&gt;li</span><br><span class="line">  padding: 0</span><br><span class="line">  margin: 0</span><br><span class="line">  display: block</span><br><span class="line">.btn-dropdown-list&gt;li&gt;a</span><br><span class="line">  display: block</span><br><span class="line">  line-height: 40px</span><br><span class="line">  font-size: 12.8px</span><br><span class="line">  padding: 5px 10px</span><br><span class="line">  float: none</span><br><span class="line">  color: #666</span><br><span class="line">  text-decoration: none</span><br><span class="line">  &amp;:hover</span><br><span class="line">    color: #5e5e5e</span><br><span class="line">    background: #f6f6f6</span><br><span class="line">    text-decoration: none</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">.btn-group</span><br><span class="line">  position relative</span><br><span class="line">  display inline-block</span><br><span class="line">  &amp;:after</span><br><span class="line">    content: &apos;&apos;</span><br><span class="line">    display block</span><br><span class="line">    clear both</span><br><span class="line">.btn-group .btn</span><br><span class="line">  border-radius: 0</span><br><span class="line">  float: left</span><br><span class="line">  border: solid 1px #333</span><br><span class="line">  &amp;:first-child</span><br><span class="line">    border-top-left-radius: 5px</span><br><span class="line">    border-bottom-left-radius: 5px</span><br><span class="line">  &amp;:last-child</span><br><span class="line">    border-top-right-radius: 5px</span><br><span class="line">    border-bottom-right-radius: 5px</span><br><span class="line">  &amp;:not(:last-child)</span><br><span class="line">    border-right none</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.btn-raised</span><br><span class="line">  border-color: #e1e1e1</span><br><span class="line">  border-style: solid</span><br><span class="line">  border-width: 1px</span><br><span class="line">  line-height: 38px</span><br><span class="line">  background: -webkit-gradient(linear, left top, left bottom, from(#f6f6f6), to(#e1e1e1))</span><br><span class="line">  background: linear-gradient(#333, #e1e1e1)</span><br><span class="line">  -webkit-box-shadow: inset 0px 1px 0px rgba(255, 255, 255, 0.3), 0 1px 2px rgba(0, 0, 0, 0.15)</span><br><span class="line">  box-shadow: inset 0px 1px 0px rgba(255, 255, 255, 0.3), 0 1px 2px rgba(0, 0, 0, 0.15)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.btn-wrap</span><br><span class="line">  display inline-block</span><br><span class="line">  padding 9px</span><br><span class="line">  border-radius 200px</span><br><span class="line">  border solid 1px #e3e3e3</span><br><span class="line">  background linear-gradient(#f2f2f2,#fff)</span><br><span class="line">  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.04)</span><br><span class="line">  &amp; .btn</span><br><span class="line">    border-radius: 200px</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用stylus 编写&lt;br&gt;工具函数:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>vue中使用highcharts和echarts的实践</title>
    <link href="http://yongchao.tech:8080/2019/02/28/vue%E4%B8%AD%E4%BD%BF%E7%94%A8highcharts%E5%92%8Cecharts%E7%9A%84%E5%AE%9E%E8%B7%B5/"/>
    <id>http://yongchao.tech:8080/2019/02/28/vue中使用highcharts和echarts的实践/</id>
    <published>2019-02-28T15:45:29.338Z</published>
    <updated>2019-02-28T15:45:29.338Z</updated>
    
    <content type="html"><![CDATA[<p>  我从事云平台前端的开发，由于项目的需要，写了一个云监控Monitor项目。起初，我选择了 Echarts， 原因很简单，中文文档，定制化能力也比较好。事实上，使用了一年多来，用的也是蛮顺手的。但是，这是一个监控项目,里面存在大量的图，每个图有着巨量的数据，而且每条line的名字也超长。带来的问题就是，页面及其卡顿，即使是我限制了每个图中的数据量，仍然无法降低，页面无操作的情况下，CPU仍然占据20%以上（八个图，每个图平均10条line）。网上找了一通，都指向z_render()函数，echarts会不停的执行这个函数。实在是不堪忍受这样的卡顿，在进行了充分调研的情况下,果断换了highcharts。</p><p>  经过实际项目测试：同等数量的情况下，highcharts和echarts 所占的内存相近，但CPU占比很低。举一个栗子，一个页面上有八个图，每个图平均大概10条线，当页面渲染完成，无任何鼠标点击的时候，echarts的CPU占比稳定在20%左右，highcharts始终在1%以下。</p><p><img src="/images/highcharts-q.png" alt="highcharts"><br><img src="/images/echarts-q.png" alt="echarts"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  我从事云平台前端的开发，由于项目的需要，写了一个云监控Monitor项目。起初，我选择了 Echarts， 原因很简单，中文文档，定制化能力也比较好。事实上，使用了一年多来，用的也是蛮顺手的。但是，这是一个监控项目,里面存在大量的图，每个图有着巨量的数据，而且每条lin
      
    
    </summary>
    
    
      <category term="vue" scheme="http://yongchao.tech:8080/tags/vue/"/>
    
      <category term="highcharts" scheme="http://yongchao.tech:8080/tags/highcharts/"/>
    
      <category term="echarts" scheme="http://yongchao.tech:8080/tags/echarts/"/>
    
  </entry>
  
  <entry>
    <title>css实现单行、多行文本溢出</title>
    <link href="http://yongchao.tech:8080/2019/02/28/css%E5%AE%9E%E7%8E%B0%E5%8D%95%E8%A1%8C%E3%80%81%E5%A4%9A%E8%A1%8C%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA/"/>
    <id>http://yongchao.tech:8080/2019/02/28/css实现单行、多行文本溢出/</id>
    <published>2019-02-28T15:09:23.000Z</published>
    <updated>2019-03-03T05:39:50.020Z</updated>
    
    <content type="html"><![CDATA[<p>###　单行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">overflow: hidden;</span><br><span class="line">text-overflow:ellipsis;</span><br><span class="line">white-space: nowrap;</span><br></pre></td></tr></table></figure></p><p>###　多行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">display: -webkit-box;</span><br><span class="line">-webkit-box-orient: vertical;</span><br><span class="line">-webkit-line-clamp: 3;</span><br><span class="line">overflow: hidden;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;###　单行：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;
      
    
    </summary>
    
    
      <category term="css" scheme="http://yongchao.tech:8080/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>timeline样式实现</title>
    <link href="http://yongchao.tech:8080/2019/02/28/timeline%E6%A0%B7%E5%BC%8F%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yongchao.tech:8080/2019/02/28/timeline样式实现/</id>
    <published>2019-02-28T14:59:51.000Z</published>
    <updated>2019-02-28T15:45:29.338Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;</span><br><span class="line">&lt;div class=&quot;head&quot;&gt;</span><br><span class="line">&lt;span class=&quot;title&quot;&gt;标题1&lt;/span&gt;</span><br><span class="line">    &lt;span class=&quot;extra&quot;&gt;2019/01/03&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;content&quot;&gt;内容内容内容内容内容内容内容内容内容内容内容内容内容&lt;/div&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line"> </span><br><span class="line">&lt;li&gt;</span><br><span class="line">      &lt;div class=&quot;head&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;title&quot;&gt;标题2&lt;/span&gt;</span><br><span class="line">        &lt;span class=&quot;extra&quot;&gt;2019/01/04&lt;/span&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">          内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">.head&#123;</span><br><span class="line">overflow:hidden;</span><br><span class="line">height:25px;</span><br><span class="line">line-height:25px;</span><br><span class="line">padding:0 5px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.extra&#123;</span><br><span class="line">float:right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.content&#123;</span><br><span class="line">border-left:solid 3px #333;</span><br><span class="line">padding-left:5px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/timeline.png" alt="timeline"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
      <category term="css" scheme="http://yongchao.tech:8080/tags/css/"/>
    
      <category term="components" scheme="http://yongchao.tech:8080/tags/components/"/>
    
  </entry>
  
  <entry>
    <title>如何搭建hexo博客</title>
    <link href="http://yongchao.tech:8080/2019/02/28/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yongchao.tech:8080/2019/02/28/如何搭建hexo博客/</id>
    <published>2019-02-28T09:48:34.000Z</published>
    <updated>2019-03-03T05:38:05.797Z</updated>
    
    <content type="html"><![CDATA[<h3 id="准备开发环境（默认已安装好node、git）"><a href="#准备开发环境（默认已安装好node、git）" class="headerlink" title="准备开发环境（默认已安装好node、git）"></a>准备开发环境（默认已安装好node、git）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir blog</span><br><span class="line">cd blog</span><br><span class="line">npm install hexo-autoprefixer hexo-generator-feed hexo-generator-json-content hexo-generator-search hexo-helper-qrcode hexo-related-popular-posts hexo-renderer-less hexo-renderer-marked --save</span><br></pre></td></tr></table></figure><p>此时是如下目录结构</p><blockquote></blockquote><p>.<br>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── source<br>|   ├── _drafts<br>|   └── _posts<br>└── themes</p><h3 id="更换配置"><a href="#更换配置" class="headerlink" title="更换配置"></a>更换配置</h3><p>更改项目根目录下的_config.ymal中的url、author、keywords等参数</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;准备开发环境（默认已安装好node、git）&quot;&gt;&lt;a href=&quot;#准备开发环境（默认已安装好node、git）&quot; class=&quot;headerlink&quot; title=&quot;准备开发环境（默认已安装好node、git）&quot;&gt;&lt;/a&gt;准备开发环境（默认已安装好node、gi
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://yongchao.tech:8080/tags/hexo/"/>
    
      <category term="blog" scheme="http://yongchao.tech:8080/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu16.04更新源</title>
    <link href="http://yongchao.tech:8080/2019/02/28/ubuntu16-04%E6%9B%B4%E6%96%B0%E6%BA%90/"/>
    <id>http://yongchao.tech:8080/2019/02/28/ubuntu16-04更新源/</id>
    <published>2019-02-27T17:48:39.000Z</published>
    <updated>2019-03-03T05:38:05.797Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-备份source-list"><a href="#1-备份source-list" class="headerlink" title="1.备份source.list"></a>1.备份source.list</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/apt/source.list /etc/apt/source.list.bak</span><br></pre></td></tr></table></figure><h3 id="2-打开source-list文件，删除全部内容"><a href="#2-打开source-list文件，删除全部内容" class="headerlink" title="2.打开source.list文件，删除全部内容"></a>2.打开source.list文件，删除全部内容</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>复制章节3中的源内容到sources.list文件并保存</p><h3 id="3-国内主流的更新源"><a href="#3-国内主流的更新源" class="headerlink" title="3.国内主流的更新源"></a>3.国内主流的更新源</h3><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">#sohu shangdong</span><br><span class="line">deb http://mirrors.sohu.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class="line">deb http://mirrors.sohu.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.sohu.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.sohu.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.sohu.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.sohu.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.sohu.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.sohu.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.sohu.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.sohu.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">#163 guangdong</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">#aliyun</span><br><span class="line">deb-src http://archive.ubuntu.com/ubuntu xenial main restricted</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb http://archive.canonical.com/ubuntu xenial partner</span><br><span class="line">deb-src http://archive.canonical.com/ubuntu xenial partner</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security multiverse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#tsinghua.edu</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial universe</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates universe</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial multiverse</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates multiverse</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security universe</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security multiverse</span><br><span class="line"></span><br><span class="line">#neu.edu</span><br><span class="line">deb-src http://mirror.neu.edu.cn/ubuntu/ xenial main restricted #Added by software-properties</span><br><span class="line">deb http://mirror.neu.edu.cn/ubuntu/ xenial main restricted</span><br><span class="line">deb-src http://mirror.neu.edu.cn/ubuntu/ xenial restricted multiverse universe #Added by software-properties</span><br><span class="line">deb http://mirror.neu.edu.cn/ubuntu/ xenial-updates main restricted</span><br><span class="line">deb-src http://mirror.neu.edu.cn/ubuntu/ xenial-updates main restricted multiverse universe</span><br><span class="line">deb http://mirror.neu.edu.cn/ubuntu/ xenial universe</span><br><span class="line">deb http://mirror.neu.edu.cn/ubuntu/ xenial-updates universe</span><br><span class="line">deb http://mirror.neu.edu.cn/ubuntu/ xenial multiverse</span><br><span class="line">deb http://mirror.neu.edu.cn/ubuntu/ xenial-updates multiverse</span><br><span class="line">deb http://mirror.neu.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirror.neu.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb http://archive.canonical.com/ubuntu xenial partner</span><br><span class="line">deb-src http://archive.canonical.com/ubuntu xenial partner</span><br><span class="line">deb http://mirror.neu.edu.cn/ubuntu/ xenial-security main restricted</span><br><span class="line">deb-src http://mirror.neu.edu.cn/ubuntu/ xenial-security main restricted multiverse universe</span><br><span class="line">deb http://mirror.neu.edu.cn/ubuntu/ xenial-security universe</span><br><span class="line">deb http://mirror.neu.edu.cn/ubuntu/ xenial-security multiverse</span><br></pre></td></tr></table></figure><h3 id="4-执行update命令更新"><a href="#4-执行update命令更新" class="headerlink" title="4.执行update命令更新"></a>4.执行update命令更新</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-备份source-list&quot;&gt;&lt;a href=&quot;#1-备份source-list&quot; class=&quot;headerlink&quot; title=&quot;1.备份source.list&quot;&gt;&lt;/a&gt;1.备份source.list&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cp /etc/apt/source.list /etc/apt/source.list.bak&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-打开source-list文件，删除全部内容&quot;&gt;&lt;a href=&quot;#2-打开source-list文件，删除全部内容&quot; class=&quot;headerlink&quot; title=&quot;2.打开source.list文件，删除全部内容&quot;&gt;&lt;/a&gt;2.打开source.list文件，删除全部内容&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim /etc/apt/sources.list&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;复制章节3中的源内容到sources.list文件并保存&lt;/p&gt;
&lt;h3 id=&quot;3-国内主流的更新源&quot;&gt;&lt;a href=&quot;#3-国内主流的更新源&quot; class=&quot;headerlink&quot; title=&quot;3.国内主流的更新源&quot;&gt;&lt;/a&gt;3.国内主流的更新源&lt;/h3&gt;
    
    </summary>
    
    
      <category term="ubuntu" scheme="http://yongchao.tech:8080/tags/ubuntu/"/>
    
  </entry>
  
</feed>
